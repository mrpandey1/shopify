{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nishant/Desktop/ongoing/shopify/src/components/sign-in/sign-in.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nconst SignInComponent = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in topmargin bodyPadding\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"SIgn in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        handleChange: handleChange,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: [' ', \"Sign in with google\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignInComponent, \"AIm0yMbsgpzML9yTEOo8lo4jacI=\");\n\n_c = SignInComponent;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignInComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInComponent\");","map":{"version":3,"sources":["/home/nishant/Desktop/ongoing/shopify/src/components/sign-in/sign-in.component.js"],"names":["React","useEffect","FormInput","CustomButton","connect","googleSignInStart","emailSignInStart","SignInComponent","userCredentials","setCredentials","useState","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAQA,KAAR,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uBAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,EAA2BC,gBAA3B,QAAmD,+BAAnD;;AACA,MAAMC,eAAe,GAAE,CAAC;AAAED,EAAAA,gBAAF;AAAoBD,EAAAA;AAApB,CAAD,KAA0C;AAAA;;AAC7D,QAAM,CAACG,eAAD,EAAiBC,cAAjB,IAAiCC,QAAQ,CAAC;AAACC,IAAAA,KAAK,EAAC,EAAP;AAAUC,IAAAA,QAAQ,EAAC;AAAnB,GAAD,CAA/C;AACA,QAAM;AAACD,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAiBJ,eAAvB;;AACC,QAAMK,YAAY,GAAE,MAAMC,KAAN,IAAa;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAT,IAAAA,gBAAgB,CAACK,KAAD,EAAOC,QAAP,CAAhB;AAEH,GAJA;;AAKD,QAAMI,YAAY,GAACF,KAAK,IAAE;AACtB,UAAM;AAACG,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAaJ,KAAK,CAACK,MAAzB;AACAV,IAAAA,cAAc,CAAC,EAAC,GAAGD,eAAJ;AAAoB,OAACU,IAAD,GAAOD;AAA3B,KAAD,CAAd;AACH,GAHD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,KAAK,EAAEF,KAHX;AAII,QAAA,YAAY,EAAEK,YAJlB;AAKI,QAAA,KAAK,EAAC,OALV;AAMI,QAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,KAAK,EAAEJ,QAHX;AAII,QAAA,YAAY,EAAEI,YAJlB;AAKI,QAAA,KAAK,EAAC,UALV;AAMI,QAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,cATJ,eAiBQ;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAEX,iBAArC;AAAwD,UAAA,cAAc,EAAE,IAAxE;AAAA,qBACK,GADL,yBAEwB,GAFxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBR;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CA3CD;;GAAME,e;;KAAAA,e;;AA6CN,MAAMa,kBAAkB,GAACC,QAAQ,KAAG;AAChChB,EAAAA,iBAAiB,EAAC,MAAIgB,QAAQ,CAAChB,iBAAiB,EAAlB,CADE;AAEhCC,EAAAA,gBAAgB,EAAC,CAACK,KAAD,EAAOC,QAAP,KAAkBS,QAAQ,CAACf,gBAAgB,CAAC;AAACK,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAD,CAAjB;AAFX,CAAH,CAAjC;;AAKA,eAAeR,OAAO,CAAC,IAAD,EAAMgB,kBAAN,CAAP,CAAiCb,eAAjC,CAAf","sourcesContent":["import  React,{ useEffect } from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux'\nimport { googleSignInStart,emailSignInStart } from '../../redux/user/user.actions';\nconst SignInComponent =({ emailSignInStart ,googleSignInStart})=>{\n    const [userCredentials,setCredentials]=useState({email:'',password:''})\n    const {email,password}=userCredentials;\n     const handleSubmit= async event=>{\n        event.preventDefault();\n        emailSignInStart(email,password);\n        \n    }\n    const handleChange=event=>{\n        const {value,name}=event.target;\n        setCredentials({...userCredentials,[name]:value})\n    }\n    return(\n        <div className='sign-in topmargin bodyPadding'>\n            <h2>I already have an account</h2>\n            <span>SIgn in with your email and password</span>\n            <form onSubmit={handleSubmit}>\n                <FormInput \n                    type='email'\n                    name='email' \n                    value={email} \n                    handleChange={handleChange}\n                    label='email'\n                    required\n                    />\n                <FormInput\n                    type='password' \n                    name='password' \n                    value={password} \n                    handleChange={handleChange}\n                    label='password'\n                    required\n                    />\n                    <div className='buttons'>\n                        <CustomButton type='submit'>Sign in</CustomButton>\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn={true}>\n                            {' '}\n                            Sign in with google{' '}\n                        </CustomButton>\n                    </div>\n            </form>\n        </div>\n    )\n}\n\nconst mapDispatchToProps=dispatch=>({\n    googleSignInStart:()=>dispatch(googleSignInStart()),\n    emailSignInStart:(email,password)=>dispatch(emailSignInStart({email,password}))\n})\n\nexport default connect(null,mapDispatchToProps)(SignInComponent);"]},"metadata":{},"sourceType":"module"}