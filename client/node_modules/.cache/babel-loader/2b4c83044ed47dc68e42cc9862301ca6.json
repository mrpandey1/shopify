{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport { persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport createSageMiddleware from 'redux-saga';\nconst sagaMiddleware = createSageMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // sagaMiddleware.run()\n\nexport const persistor = persistStore(store);\nconst storeVariable = {\n  store,\n  persistStore\n};\nexport default storeVariable;","map":{"version":3,"sources":["/home/nishant/Desktop/ongoing/shopify/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","rootReducer","persistStore","thunk","createSageMiddleware","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","persistor","storeVariable"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAAQC,YAAR,QAA0B,eAA1B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,MAAMC,cAAc,GAACD,oBAAoB,EAAzC;AAEA,MAAME,WAAW,GAAC,CAACD,cAAD,CAAlB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAuB,aAA1B,EAAwC;AACpCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AAED,OAAO,MAAMW,KAAK,GAAEb,WAAW,CAACG,WAAD,EAAaF,eAAe,CAAC,GAAGO,WAAJ,CAA5B,CAAxB,C,CAEP;;AAEA,OAAO,MAAMM,SAAS,GAACV,YAAY,CAACS,KAAD,CAA5B;AAEP,MAAME,aAAa,GAAC;AAACF,EAAAA,KAAD;AAAOT,EAAAA;AAAP,CAApB;AACA,eAAeW,aAAf","sourcesContent":["import {createStore,applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport {persistStore} from'redux-persist';\nimport thunk from 'redux-thunk';\nimport createSageMiddleware from 'redux-saga';\n\nconst sagaMiddleware=createSageMiddleware();\n\nconst middlewares=[sagaMiddleware];\n\nif(process.env.NODE_ENV==='development'){\n    middlewares.push(logger);\n}\n\nexport const store= createStore(rootReducer,applyMiddleware(...middlewares));\n\n// sagaMiddleware.run()\n\nexport const persistor=persistStore(store);\n\nconst storeVariable={store,persistStore}\nexport default storeVariable;"]},"metadata":{},"sourceType":"module"}