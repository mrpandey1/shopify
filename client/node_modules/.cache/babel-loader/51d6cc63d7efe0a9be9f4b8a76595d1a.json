{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInFailure, emailSignInSuccess } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.util';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/nishant/Desktop/ongoing/shopify/src/redux/user/user.saga.js"],"names":["takeLatest","put","call","all","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInFailure","emailSignInSuccess","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","signInSuccess","id","data","error","signInFailure","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,mBAAT,EAA6BC,mBAA7B,EAAkDC,kBAAlD,EAAsEC,kBAAtE,QAA+F,gBAA/F;AACA,SAASC,IAAT,EAAgBC,cAAhB,EAAgCC,yBAAhC,QAAgE,8BAAhE;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAO,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAnB;AACA,UAAMK,OAAO,GAAC,MAAMb,IAAI,CAACS,yBAAD,EAA2BE,IAA3B,CAAxB;AACA,UAAMG,YAAY,GAAC,MAAMD,OAAO,CAACE,GAAR,EAAzB;AACA,UAAMhB,GAAG,CACLiB,aAAa,CAAC;AAACC,MAAAA,EAAE,EAACH,YAAY,CAACG,EAAjB;AAAoB,SAAGH,YAAY,CAACI,IAAb;AAAvB,KAAD,CADR,CAAT;AAEH,GAND,CAMC,OAAMC,KAAN,EAAY;AACT,UAAMpB,GAAG,CAACqB,aAAa,CAACD,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUE,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAT,CAA1B,EAAqD;AACxD,MAAG;AACC,UAAM;AAAEb,MAAAA;AAAF,QAAS,MAAMJ,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAwCC,QAAxC,CAArB;AACA,UAAMX,OAAO,GAAC,MAAMb,IAAI,CAACS,yBAAD,EAA2BE,IAA3B,CAAxB;AACA,UAAMG,YAAY,GAAC,MAAMD,OAAO,CAACE,GAAR,EAAzB;AACA,UAAMhB,GAAG,CACLiB,aAAa,CAAC;AAACC,MAAAA,EAAE,EAACH,YAAY,CAACG,EAAjB;AAAoB,SAAGH,YAAY,CAACI,IAAb;AAAvB,KAAD,CADR,CAAT;AAGH,GAPD,CAOC,OAAMC,KAAN,EAAY;AACT,UAAMpB,GAAG,CAACqB,aAAa,CAACD,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUO,mBAAV,GAA+B;AAClC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,oBAAjB,EAAsCjB,gBAAtC,CAAhB;AACH;AACD,OAAO,UAAUkB,kBAAV,GAA8B;AACjC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAqCR,eAArC,CAAhB;AACH;AACD,OAAO,UAAUS,SAAV,GAAqB;AACxB,QAAM7B,GAAG,CAAC,CAACD,IAAI,CAAC0B,mBAAD,CAAL,EAA2B1B,IAAI,CAAC4B,kBAAD,CAA/B,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest , put, call,all } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess,googleSignInFailure, emailSignInFailure, emailSignInSuccess} from './user.actions';\nimport { auth , googleProvider, createUserProfileDocument }from '../../firebase/firebase.util';\n\nexport function* signInWithGoogle(){\n    try{\n        const {user}=yield auth.signInWithPopup(googleProvider);\n        const userRef=yield call(createUserProfileDocument,user);\n        const userSnapshot=yield userRef.get();\n        yield put(\n            signInSuccess({id:userSnapshot.id,...userSnapshot.data()}));\n    }catch(error){\n        yield put(signInFailure(error));\n    }\n} \n\nexport function* signInWithEmail({payload:{email,password}}){\n    try{\n        const { user }=yield auth.signInWithEmailAndPassword(email  ,password);\n        const userRef=yield call(createUserProfileDocument,user);\n        const userSnapshot=yield userRef.get();\n        yield put(\n            signInSuccess({id:userSnapshot.id,...userSnapshot.data()}));\n\n    }catch(error){\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle)\n}\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail)\n}\nexport function* userSagas(){\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart)])\n} "]},"metadata":{},"sourceType":"module"}