{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nishant/Desktop/ongoing/shopify/client/src/components/sign-in/sign-in.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in-styles';\n\nconst SignInComponent = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    classNam: \"sign-in-up-container topmargin\",\n    children: /*#__PURE__*/_jsxDEV(SignInContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          handleChange: handleChange,\n          value: email,\n          label: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: password,\n          handleChange: handleChange,\n          label: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \" Sign in \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \"Sign in with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignInComponent, \"AIm0yMbsgpzML9yTEOo8lo4jacI=\");\n\n_c = SignInComponent;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignInComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInComponent\");","map":{"version":3,"sources":["/home/nishant/Desktop/ongoing/shopify/client/src/components/sign-in/sign-in.component.js"],"names":["React","useState","FormInput","CustomButton","connect","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignInComponent","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import  React,{ useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux'\nimport { googleSignInStart,emailSignInStart } from '../../redux/user/user.actions';\nimport {\n    SignInContainer,\n    SignInTitle,\n    ButtonsBarContainer\n  } from './sign-in-styles'\n\nconst SignInComponent =({ emailSignInStart ,googleSignInStart})=>{\n    const [userCredentials,setCredentials]=useState({email:'',password:''})\n    const {email,password}=userCredentials;\n     const handleSubmit= async event=>{\n        event.preventDefault();\n        emailSignInStart(email,password);\n        \n    }\n    const handleChange=event=>{\n        const {value,name}=event.target;\n        setCredentials({...userCredentials,[name]:value})\n    }\n    return(\n        <div classNam='sign-in-up-container topmargin'>\n    <SignInContainer>\n        <SignInTitle>I already have an account</SignInTitle>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={handleSubmit}>\n            <FormInput\n            name='email'\n            type='email'\n            handleChange={handleChange}\n            value={email}\n            label='email'\n            required\n            />\n            <FormInput\n            name='password'\n            type='password'\n            value={password}\n            handleChange={handleChange}\n            label='password'\n            required\n            />\n            <ButtonsBarContainer>\n            <CustomButton type='submit'> Sign in </CustomButton>\n            <CustomButton\n                type='button'\n                onClick={googleSignInStart}\n                isGoogleSignIn\n            >\n                Sign in with Google\n            </CustomButton>\n            </ButtonsBarContainer>\n        </form>\n        </SignInContainer>\n        </div>\n  );\n}\n\nconst mapDispatchToProps=dispatch=>({\n    googleSignInStart:()=>dispatch(googleSignInStart()),\n    emailSignInStart:(email,password)=>dispatch(emailSignInStart({email,password}))\n})\n\nexport default connect(null,mapDispatchToProps)(SignInComponent);"]},"metadata":{},"sourceType":"module"}