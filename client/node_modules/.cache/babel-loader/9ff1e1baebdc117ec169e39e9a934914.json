{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nishant/Desktop/ongoing/shopify/src/pages/shop/shop.component.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.components';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page topmargin bodyPadding\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: isCollectionLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/home/nishant/Desktop/ongoing/shopify/src/pages/shop/shop.component.js"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionLoaded","WithSpinner","CollectionsOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,EAAoCC,wBAApC,QAAoE,iCAApE;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,uEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,8BAA8B,GAACH,WAAW,CAACC,mBAAD,CAAhD;KAAME,8B;AACN,MAAMC,yBAAyB,GAACJ,WAAW,CAACE,cAAD,CAA3C;MAAME,yB;;AACN,MAAMC,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AACnCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEV,MAAAA;AAAF,QAA+B,KAAKW,KAA1C;AACAX,IAAAA,0BAA0B;AAC3B;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAAQC,MAAAA,oBAAR;AAA8BC,MAAAA;AAA9B,QAAqD,KAAKJ,KAAhE;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAFtB;AAGE,QAAA,MAAM,EAAEL,KAAK,iBACX,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEI,kBAA3C;AAAA,aAAmEJ;AAAnE;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBADtB;AAEE,QAAA,MAAM,EAAEL,KAAK,iBACX,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEG,oBAAtC;AAAA,aAAgEH;AAAhE;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAzBkC;;AA4BrC,MAAMM,eAAe,GAAClB,wBAAwB,CAAC;AAC7Ce,EAAAA,oBAAoB,EAAEb,0BADuB;AAE7Cc,EAAAA,kBAAkB,EAACb;AAF0B,CAAD,CAA9C;;AAKA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCnB,EAAAA,0BAA0B,EAAC,MAAImB,QAAQ,CAACnB,0BAA0B,EAA3B;AADD,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CACpBmB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbV,QAHa,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching,selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.components';\nimport CollectionPage from '../collection/collection.component';\n\nconst CollectionsOverviewWithSpinner=WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner=WithSpinner(CollectionPage);\nclass ShopPage extends React.Component {\n    componentDidMount() {\n      const { fetchCollectionsStartAsync }=this.props;\n      fetchCollectionsStartAsync();\n    }\n  \n    render() {\n      const { match,isCollectionFetching ,isCollectionLoaded } = this.props;\n      return (\n        <div className='shop-page topmargin bodyPadding'>\n          <Route\n            exact\n            path={`${match.path}`}\n            render={props => (\n              <CollectionsOverviewWithSpinner isLoading={isCollectionLoaded} {...props} />\n            )}\n          />\n          <Route\n            path={`${match.path}/:collectionId`}\n            render={props => (\n              <CollectionPageWithSpinner isLoading={isCollectionFetching} {...props} />\n            )}\n          />\n        </div>\n      );\n    }\n  }\n\n  const mapStateToProps=createStructuredSelector({\n    isCollectionFetching :selectIsCollectionFetching,\n    isCollectionLoaded:selectIsCollectionLoaded\n  });\n  \n  const mapDispatchToProps = dispatch => ({\n    fetchCollectionsStartAsync:()=>dispatch(fetchCollectionsStartAsync())\n  });\n\n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ShopPage);\n  "]},"metadata":{},"sourceType":"module"}