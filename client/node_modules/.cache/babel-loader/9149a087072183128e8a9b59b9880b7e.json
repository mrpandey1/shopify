{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport { persistStore } from 'redux-persist';\nimport createSageMiddleware from 'redux-saga';\nimport rootSaga from './root.saga';\nconst sagaMiddleware = createSageMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nconst storeVariable = {\n  store,\n  persistStore\n};\nexport default storeVariable;","map":{"version":3,"sources":["/home/nishant/Desktop/ongoing/shopify/client/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","rootReducer","persistStore","createSageMiddleware","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor","storeVariable"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAAQC,YAAR,QAA0B,eAA1B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAACF,oBAAoB,EAAzC;AAEA,MAAMG,WAAW,GAAC,CAACD,cAAD,CAAlB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAuB,aAA1B,EAAwC;AACpCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AAED,OAAO,MAAMW,KAAK,GAAEb,WAAW,CAACG,WAAD,EAAaF,eAAe,CAAC,GAAGO,WAAJ,CAA5B,CAAxB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAEA,OAAO,MAAMS,SAAS,GAACX,YAAY,CAACS,KAAD,CAA5B;AAEP,MAAMG,aAAa,GAAC;AAACH,EAAAA,KAAD;AAAOT,EAAAA;AAAP,CAApB;AACA,eAAeY,aAAf","sourcesContent":["import {createStore,applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport {persistStore} from'redux-persist';\nimport createSageMiddleware from 'redux-saga';\nimport rootSaga from './root.saga';\n\nconst sagaMiddleware=createSageMiddleware();\n\nconst middlewares=[sagaMiddleware];\n\nif(process.env.NODE_ENV==='development'){\n    middlewares.push(logger);\n}\n\nexport const store= createStore(rootReducer,applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga)\n\nexport const persistor=persistStore(store);\n\nconst storeVariable={store,persistStore}\nexport default storeVariable;"]},"metadata":{},"sourceType":"module"}