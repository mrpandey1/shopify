{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nishant/Desktop/ongoing/shopify/src/pages/shop/shop.component.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils.js';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.components';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n      console.log(this.state);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page topmargin bodyPadding\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: isLoading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: isLoading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/home/nishant/Desktop/ongoing/shopify/src/pages/shop/shop.component.js"],"names":["React","Route","connect","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","console","log","render","match","isLoading","path","mapDispatchToProps","dispatch","collectionMap"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,kCAHP;AAKA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,uEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,8BAA8B,GAACH,WAAW,CAACC,mBAAD,CAAhD;KAAME,8B;AACN,MAAMC,yBAAyB,GAACJ,WAAW,CAACE,cAAD,CAA3C;MAAME,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC5B;AACFC,MAAAA,OAAO,EAAC;AADN,KAD4B;AAAA,SAKlCC,uBALkC,GAKV,IALU;AAAA;;AAOlCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAAEX,MAAAA;AAAF,QAAsB,KAAKY,KAAjC;AACA,UAAMC,aAAa,GAACf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAApB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAgB;AACrC,YAAMC,cAAc,GAAClB,+BAA+B,CAACiB,QAAD,CAApD;AACAhB,MAAAA,iBAAiB,CAACiB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAC;AAAT,OAAd;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACH,KALD;AAMH;;AAEDa,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAQ,KAAKV,KAAnB;AACA,UAAM;AAACW,MAAAA;AAAD,QAAY,KAAKf,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEc,KAAK,CAACE,IAAK,EAAjC;AACI,QAAA,MAAM,EAAGZ,KAAD,iBACR,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEW,SAA3C;AAAA,aAA0DX;AAA1D;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEU,KAAK,CAACE,IAAK,gBAA3B;AACI,QAAA,MAAM,EAAGZ,KAAD,iBACR,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEW,SAAtC;AAAA,aAAqDX;AAArD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAnCiC;;AAoCrC;;AAED,MAAMa,kBAAkB,GAACC,QAAQ,KAAG;AAChC1B,EAAAA,iBAAiB,EAAC2B,aAAa,IAC/BD,QAAQ,CAAC1B,iBAAiB,CAAC2B,aAAD,CAAlB;AAFwB,CAAH,CAAjC;;AAMA,eAAe9B,OAAO,CAAC,IAAD,EAAM4B,kBAAN,CAAP,CAAiCnB,QAAjC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from '../../firebase/firebase.utils.js';\n\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.components';\nimport CollectionPage from '../collection/collection.component';\n\nconst CollectionsOverviewWithSpinner=WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner=WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component{\n    state={\n        loading:true\n    };\n\n    unsubscribeFromSnapshot=null; \n\n    componentDidMount(){\n        const { updateCollections }=this.props;\n        const collectionRef=firestore.collection('collections');\n        collectionRef.onSnapshot(async snapshot=>{\n            const collectionsMap=convertCollectionsSnapshotToMap(snapshot);\n            updateCollections(collectionsMap);\n            this.setState({loading:false})\n            console.log(this.state);\n        });\n    }\n\n    render(){\n        const {match}=this.props;\n        const {isLoading}=this.state;\n        return(\n            <div className='shop-page topmargin bodyPadding'>\n                <Route exact path={`${match.path}`}\n                    render={(props)=> \n                    <CollectionsOverviewWithSpinner isLoading={isLoading} {...props}\n                    />}\n                />\n                <Route path={`${match.path}/:collectionId`} \n                    render={(props)=> \n                    <CollectionPageWithSpinner isLoading={isLoading} {...props}\n                    />}\n                />\n            </div>\n        );\n    }\n};\n\nconst mapDispatchToProps=dispatch=>({\n    updateCollections:collectionMap=>\n    dispatch(updateCollections(collectionMap))\n})\n\n\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}