{"ast":null,"code":"import{createStore,applyMiddleware}from'redux';import logger from'redux-logger';import rootReducer from'./root-reducer';import{persistStore}from'redux-persist';import createSageMiddleware from'redux-saga';import rootSaga from'./root.saga';var sagaMiddleware=createSageMiddleware();var middlewares=[sagaMiddleware];if(process.env.NODE_ENV==='development'){middlewares.push(logger);}export var store=createStore(rootReducer,applyMiddleware.apply(void 0,middlewares));sagaMiddleware.run(rootSaga);export var persistor=persistStore(store);var storeVariable={store:store,persistStore:persistStore};export default storeVariable;","map":{"version":3,"sources":["/home/nishant/Desktop/ongoing/shopify/client/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","rootReducer","persistStore","createSageMiddleware","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor","storeVariable"],"mappings":"AAAA,OAAQA,WAAR,CAAoBC,eAApB,KAA0C,OAA1C,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,OAAQC,YAAR,KAA0B,eAA1B,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CAEA,GAAMC,CAAAA,cAAc,CAACF,oBAAoB,EAAzC,CAEA,GAAMG,CAAAA,WAAW,CAAC,CAACD,cAAD,CAAlB,CAEA,GAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,aAA1B,CAAwC,CACpCH,WAAW,CAACI,IAAZ,CAAiBV,MAAjB,EACH,CAED,MAAO,IAAMW,CAAAA,KAAK,CAAEb,WAAW,CAACG,WAAD,CAAaF,eAAe,MAAf,QAAmBO,WAAnB,CAAb,CAAxB,CAEPD,cAAc,CAACO,GAAf,CAAmBR,QAAnB,EAEA,MAAO,IAAMS,CAAAA,SAAS,CAACX,YAAY,CAACS,KAAD,CAA5B,CAEP,GAAMG,CAAAA,aAAa,CAAC,CAACH,KAAK,CAALA,KAAD,CAAOT,YAAY,CAAZA,YAAP,CAApB,CACA,cAAeY,CAAAA,aAAf","sourcesContent":["import {createStore,applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport {persistStore} from'redux-persist';\nimport createSageMiddleware from 'redux-saga';\nimport rootSaga from './root.saga';\n\nconst sagaMiddleware=createSageMiddleware();\n\nconst middlewares=[sagaMiddleware];\n\nif(process.env.NODE_ENV==='development'){\n    middlewares.push(logger);\n}\n\nexport const store= createStore(rootReducer,applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga)\n\nexport const persistor=persistStore(store);\n\nconst storeVariable={store,persistStore}\nexport default storeVariable;"]},"metadata":{},"sourceType":"module"}