{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nishant/Desktop/ongoing/shopify/client/src/components/sign-in/sign-in.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nconst SignInComponent = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        handleChange: handleChange,\n        value: email,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \" Sign in \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 1\n  }, this);\n};\n\n_s(SignInComponent, \"AIm0yMbsgpzML9yTEOo8lo4jacI=\");\n\n_c = SignInComponent;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignInComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInComponent\");","map":{"version":3,"sources":["/home/nishant/Desktop/ongoing/shopify/client/src/components/sign-in/sign-in.component.js"],"names":["React","useState","FormInput","CustomButton","connect","googleSignInStart","emailSignInStart","SignInComponent","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAQA,KAAR,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,uBAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,EAA2BC,gBAA3B,QAAmD,+BAAnD;;AACA,MAAMC,eAAe,GAAE,CAAC;AAAED,EAAAA,gBAAF;AAAoBD,EAAAA;AAApB,CAAD,KAA0C;AAAA;;AAC7D,QAAM,CAACG,eAAD,EAAiBC,cAAjB,IAAiCR,QAAQ,CAAC;AAACS,IAAAA,KAAK,EAAC,EAAP;AAAUC,IAAAA,QAAQ,EAAC;AAAnB,GAAD,CAA/C;AACA,QAAM;AAACD,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAiBH,eAAvB;;AACC,QAAMI,YAAY,GAAE,MAAMC,KAAN,IAAa;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAR,IAAAA,gBAAgB,CAACI,KAAD,EAAOC,QAAP,CAAhB;AAEH,GAJA;;AAKD,QAAMI,YAAY,GAACF,KAAK,IAAE;AACtB,UAAM;AAACG,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAaJ,KAAK,CAACK,MAAzB;AACAT,IAAAA,cAAc,CAAC,EAAC,GAAGD,eAAJ;AAAoB,OAACS,IAAD,GAAOD;AAA3B,KAAD,CAAd;AACH,GAHD;;AAIA,sBACJ,QAAC,eAAD;AAAA,4BACM,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,eAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFN,eAIM;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,YAAY,EAAEG,YAHhB;AAIE,QAAA,KAAK,EAAEL,KAJT;AAKE,QAAA,KAAK,EAAC,OALR;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAEC,QAHT;AAIE,QAAA,YAAY,EAAEI,YAJhB;AAKE,QAAA,KAAK,EAAC,UALR;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE,QAAC,mBAAD;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAEV,iBAFX;AAGE,UAAA,cAAc,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJN;AAAA;AAAA;AAAA;AAAA;AAAA,UADI;AAmCH,CA/CD;;GAAME,e;;KAAAA,e;;AAiDN,MAAMY,kBAAkB,GAACC,QAAQ,KAAG;AAChCf,EAAAA,iBAAiB,EAAC,MAAIe,QAAQ,CAACf,iBAAiB,EAAlB,CADE;AAEhCC,EAAAA,gBAAgB,EAAC,CAACI,KAAD,EAAOC,QAAP,KAAkBS,QAAQ,CAACd,gBAAgB,CAAC;AAACI,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAD,CAAjB;AAFX,CAAH,CAAjC;;AAKA,eAAeP,OAAO,CAAC,IAAD,EAAMe,kBAAN,CAAP,CAAiCZ,eAAjC,CAAf","sourcesContent":["import  React,{ useState } from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux'\nimport { googleSignInStart,emailSignInStart } from '../../redux/user/user.actions';\nconst SignInComponent =({ emailSignInStart ,googleSignInStart})=>{\n    const [userCredentials,setCredentials]=useState({email:'',password:''})\n    const {email,password}=userCredentials;\n     const handleSubmit= async event=>{\n        event.preventDefault();\n        emailSignInStart(email,password);\n        \n    }\n    const handleChange=event=>{\n        const {value,name}=event.target;\n        setCredentials({...userCredentials,[name]:value})\n    }\n    return(\n<SignInContainer>\n      <SignInTitle>I already have an account</SignInTitle>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name='email'\n          type='email'\n          handleChange={handleChange}\n          value={email}\n          label='email'\n          required\n        />\n        <FormInput\n          name='password'\n          type='password'\n          value={password}\n          handleChange={handleChange}\n          label='password'\n          required\n        />\n        <ButtonsBarContainer>\n          <CustomButton type='submit'> Sign in </CustomButton>\n          <CustomButton\n            type='button'\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            Sign in with Google\n          </CustomButton>\n        </ButtonsBarContainer>\n      </form>\n    </SignInContainer>\n  );\n}\n\nconst mapDispatchToProps=dispatch=>({\n    googleSignInStart:()=>dispatch(googleSignInStart()),\n    emailSignInStart:(email,password)=>dispatch(emailSignInStart({email,password}))\n})\n\nexport default connect(null,mapDispatchToProps)(SignInComponent);"]},"metadata":{},"sourceType":"module"}