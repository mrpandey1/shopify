{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nishant/Desktop/ongoing/shopify/src/components/sign-up/sign-up.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-up.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignupComponent = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Want to create account ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Register using email password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"name\",\n        name: \"displayName\",\n        value: displayName,\n        handleChange: handleChange,\n        label: \"name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        handleChange: handleChange,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        handleChange: handleChange,\n        label: \"confirm password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignupComponent, \"mNNXw+WafZPaA8PIhtWtq0DR7z8=\");\n\n_c = SignupComponent;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignupComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupComponent\");","map":{"version":3,"sources":["/home/nishant/Desktop/ongoing/shopify/src/components/sign-up/sign-up.component.js"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignupComponent","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import  React ,{ useState }from 'react';\nimport { connect } from 'react-redux';\nimport './sign-up.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nconst SignupComponent =({signUpStart})=>{\n    const [userCredentials,setUserCredentials]=useState({\n        displayName:'',\n        email:'',\n        password:'',\n        confirmPassword:''\n    })\n    const {displayName,email,password,confirmPassword}=userCredentials;\n    const handleSubmit=async event =>{\n        event.preventDefault();\n        if(password!==confirmPassword){\n            alert(\"passwords don't match\");\n            return;\n        }\n        signUpStart({displayName,email,password});\n    }\n    const handleChange=event=>{\n        const {value,name}=event.target;\n        setUserCredentials({...userCredentials,[name]:value})\n    }\n    return(\n        <div className='sign-up'>\n            <h2 className='title'>Want to create account ?</h2>\n                <span>Register using email password</span>\n                <form className='sign-up-form' onSubmit={handleSubmit}>\n                    <FormInput \n                        type='name'\n                        name='displayName' \n                        value={displayName} \n                        handleChange={handleChange}\n                        label='name'\n                        required\n                    />\n                    <FormInput\n                        type='email'\n                        name='email'\n                        value={email}\n                        handleChange={handleChange}\n                        label='email'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='password'\n                        value={password}\n                        handleChange={handleChange}\n                        label='password'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        value={confirmPassword}\n                        handleChange={handleChange}\n                        label='confirm password'\n                        required\n                    />\n                    <CustomButton type='submit'>Sign Up</CustomButton>\n                </form>\n        </div>\n    );\n}\n\nconst mapDispatchToProps=dispatch=>({\n    signUpStart:userCredentials=>dispatch(signUpStart(userCredentials))\n})\nexport default connect(null,mapDispatchToProps)(SignupComponent);"]},"metadata":{},"sourceType":"module"}